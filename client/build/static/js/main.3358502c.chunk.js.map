{"version":3,"sources":["App.js","index.js"],"names":["App","React","useState","shown","setShown","website","setWebsite","biograph","setBiograph","position","setPosition","education","setEducation","research","setResearch","award","setAward","newWebsite","setNewWebsite","newBiograph","setNewBiograph","newPosition","setNewPosition","newEducation","setNewEducation","newResearch","setNewResearch","newAward","setNewAward","entityList","setEntityList","className","type","onChange","event","target","value","onClick","Axios","post","then","get","response","data","map","val","key","id","put","delete","filter","src","width","height","center","scrolling","frameborder","marginwidth","marginheight","sandbox","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3358502c.chunk.js","sourcesContent":["import React, { useState, useEffect, Component} from 'react';\nimport './App.css';\nimport Axios from 'axios';\nimport $ from 'jquery';\n\n\nfunction App () {\n  // CRUD OP \n  const [shown, setShown] = React.useState(false);\n  const [website, setWebsite] = useState(\"\");\n  const [biograph, setBiograph] = useState(\"\");\n  const [position, setPosition] = useState(\"\");\n  const [education, setEducation] = useState(\"\");\n  const [research, setResearch] = useState(\"\");\n  const [award, setAward] = useState(\"\");\n\n  const [newWebsite, setNewWebsite] = useState(\"\");\n  const [newBiograph, setNewBiograph] = useState(\"\");\n  const [newPosition, setNewPosition] = useState(\"\");\n  const [newEducation, setNewEducation] = useState(\"\");\n  const [newResearch, setNewResearch] = useState(\"\");\n  const [newAward, setNewAward] = useState(\"\");\n\n  const [entityList, setEntityList] = useState([]);\n\n  const addEntity = () => {\n    Axios.post('http://localhost:3001/create', {\n      website: website,\n      biograph: biograph,\n      position: position,\n      education: education,\n      research: research,\n      award: award,\n    }).then(() => {\n      setEntityList([\n        ...entityList,\n        {\n          website: website,\n          biograph: biograph,\n          position: position,\n          education: education,\n          research: research,\n          award: award,\n        },\n      ]);\n    });\n  };\n  \n  const getEntities = () => {\n    Axios.get(\"http://localhost:3001/entities\").then((response) => {\n      setEntityList(response.data);\n    });\n  };\n\n  const updateEntityDesc = (id) => {\n    Axios.put(\"http://localhost:3001/update\", {\n      id: id,   \n      website: newWebsite, \n      biograph: newBiograph,\n      position: newPosition,\n      education: newEducation,\n      research: newResearch,\n      award: newAward\n      }).then(\n      (response) => {\n        setEntityList(\n          entityList.map((val) => {\n            return val.id == id\n              ? {\n                  id: id,\n                  website: newWebsite,\n                  biograph: newBiograph,\n                  position: newPosition,\n                  education: newEducation,\n                  research: newResearch,\n                  award: newAward,\n                }\n              : val;\n          })\n        );\n      }\n    );\n  };\n\n  const deleteEntity = (id) => {\n    Axios.delete(`http://localhost:3001/delete/${id}`).then((response) => {\n      setEntityList(\n        entityList.filter((val) => {\n          return val.id != id;\n        })\n      );\n    });\n  };\n\n// test websites: http://mjt.web.engr.illinois.edu/ https://alawini.com/\n\n  return (\n    <div className=\"App\">\n      <div className=\"information\">\n        <h1>Editor/Dashboard</h1>\n\n        <label>Website:</label>\n        <input type=\"text\" onChange={(event) => {setWebsite(event.target.value);}}/>\n\n        <label>Biograph:</label>\n        <input type=\"text\" onChange={(event) => {setBiograph(event.target.value);}}/>\n\n        <label>Position:</label>\n        <input type=\"text\" onChange={(event) => {setPosition(event.target.value);}}/>\n\n        <label>Education:</label>\n        <input type=\"text\" onChange={(event) => {setEducation(event.target.value);}}/>\n\n        <label>Research Interest:</label>\n        <input type=\"text\" onChange={(event) => {setResearch(event.target.value);}}/>\n\n        <label>Award:</label>\n        <input type=\"text\" onChange={(event) => {setAward(event.target.value);}}/>\n\n\n        <button onClick={addEntity}>Add Entity</button>\n      </div>\n\n      <div className=\"entities\">\n        <button onClick={getEntities}>Show Entities</button>\n\n        {entityList.map((val, key) => {\n          return (\n            <div className=\"entity\">\n              <div>\n                <h3>Website: {val.website}</h3>\n                <h3>Biograph: {val.biograph}</h3>\n                <h3>Position: {val.position}</h3>\n                <h3>Education: {val.education}</h3>\n                <h3>Research: {val.research}</h3>\n                <h3>Award: {val.award}</h3>\n              </div>\n\n              <div>\n                <input type=\"text\" onChange={(event) => {\n                    setNewWebsite(event.target.value);\n                  }}\n                />\n\n                <input type=\"text\" onChange={(event) => {\n                    setNewBiograph(event.target.value);\n                  }}\n                />\n\n                <input type=\"text\" onChange={(event) => {\n                    setNewPosition(event.target.value);\n                  }}\n                />\n\n                <input type=\"text\" onChange={(event) => {\n                    setNewEducation(event.target.value);\n                  }}\n                />\n\n                <input type=\"text\" onChange={(event) => {\n                    setNewResearch(event.target.value);\n                  }}\n                />\n\n                <input type=\"text\" onChange={(event) => {\n                    setNewAward(event.target.value);\n                  }}\n                />\n\n                <button onClick={() => {updateEntityDesc(val.id);}}>{\" \"}\n                  Update\n                </button>\n\n                <button onClick={() => {deleteEntity(val.id);}}>Delete</button>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      \n      <div className=\"render\">\n        <button onClick={() => setShown(!shown)}>Toggle Render</button>\n        {shown ?  <iframe src={website} width='1690px' height='900px' center=\"yes\" scrolling='yes'  frameborder=\"0\" marginwidth=\"0\"\n          marginheight=\"0\" sandbox='allow-modals allow-forms allow-popups allow-scripts allow-same-origin'>\n        </iframe> : null}\n      </div>\n      \n    </div>\n  );\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}